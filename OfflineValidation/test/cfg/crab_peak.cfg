[CRAB]

jobtype = cmssw
scheduler = glite
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = caf

[CMSSW]

### The data you want to access (to be found on DBS)
#datasetpath=/Cosmics/CRAFT09-PromptReco-v1/RECO
#datasetpath=/Cosmics/CRAFT09-TkAlCosmics0T-v1/ALCARECO
datasetpath=/Cosmics/CRAFT09-TrackingPointing-CRAFT09_R_V4_CosmicsSeq_v1/RAW-RECO

#runselection=109046
runselection=109011-109624

### The ParameterSet you want to use
#pset=pythia.cfg
pset=cfg/trackerOfflineValidation_crab_cfg.py


### Splitting parameters
total_number_of_events=-1
#total_number_of_events=100000
#events_per_job = 10000
number_of_jobs = 10

### The output files (comma separated list)
output_file = temp.root

[USER]

additional_input_files = TrackerAlignment_2009_v1_prompt.db
### OUTPUT files Management

##  output back into UI
return_data = 1

























### Store data to resilient (Eric Vaandering)
#return_data            = 0
#copy_data              = 1
#storage_element        = cmssrm.fnal.gov
#storage_path           = /srm/managerv1?SFN=/resilient/benhoob/tutorial/
#User_remote_dir = test/
### Set SRM version to match "managerv1" above. 
#srm_version = 1

###
#return_data=0
#copy_data=1
#storage_element         = T1_US_FNAL_Buffer
#storage_element         = cmssrm.fnal.gov
#storage_path            = /srm/managerv2?SFN=/resilent/benhoob/tutorial/
#user_remote_dir         = test/
# Set SRM version to match "managerv2" above.
#srm_version             = 2



### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
#copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint 
#user_remote_dir = name_directory_you_want


### To publish produced output in a local istance of DBS set publish_data = 1
#publish_data=1
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
#publish_data_name = benhoob_Data
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_01_writer/servlet/DBSServlet

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
eMail = benhoob@fnal.gov

[GRID]
#
## RB/WMS management:
#rb = CERN

##  Black and White Lists management:
## By Storage
#se_black_list = T0,T1
#se_white_list = T2_CH_CAF

## By ComputingElement
#ce_black_list =
#ce_white_list =

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

